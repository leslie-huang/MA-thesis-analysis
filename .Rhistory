labs(
x = "Date",
y = "Percent Positive Emotion",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-06-01", "%Y-%m-%d"), NA)) +
coord_cartesian(ylim = c(0, 50))
paper_j_p
paper_j_p = ggplot(joint_results, aes(x = as.Date(date, origin = "1970-01-01"), y = EmoPos, color = "Joint")) +
ggtitle("Loessed Joint Positive Emotion with Optimal Breakpoints") +
geom_smooth(method = "loess", se = FALSE, color = "#000000") +
geom_vline(data = filter(pos_breaks, group == "joint"), mapping = aes(xintercept = as.numeric(date)), linetype = 2) +
labs(
x = "Date",
y = "Percent Positive Emotion",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-06-01", "%Y-%m-%d"), NA)) +
coord_cartesian(ylim = c(0, 35))
paper_j_p
paper_j_p = ggplot(joint_results, aes(x = as.Date(date, origin = "1970-01-01"), y = EmoPos, color = "Joint")) +
ggtitle("Loessed Joint Positive Emotion with Optimal Breakpoints") +
geom_smooth(method = "loess", se = FALSE, color = "#000000") +
geom_vline(data = filter(pos_breaks, group == "joint"), mapping = aes(xintercept = as.numeric(date)), linetype = 2) +
labs(
x = "Date",
y = "Percent Positive Emotion",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-06-01", "%Y-%m-%d"), NA)) +
coord_cartesian(ylim = c(0, 30))
paper_j_p
paper_j_p = ggplot(joint_results, aes(x = as.Date(date, origin = "1970-01-01"), y = EmoPos, color = "Joint")) +
ggtitle("Loessed Joint Positive Emotion with Optimal Breakpoints") +
geom_smooth(method = "loess", se = FALSE, color = "#000000") +
geom_vline(data = filter(pos_breaks, group == "joint"), mapping = aes(xintercept = as.numeric(date)), linetype = 2) +
labs(
x = "Date",
y = "Percent Positive Emotion",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-06-01", "%Y-%m-%d"), NA)) +
coord_cartesian(ylim = c(0, 30), breaks = 5)
paper_j_p
#################################################################################
#################################################################################
# Introducing... public opinion
public_op <- read.csv("../MA-datasets/public opinion.csv", stringsAsFactors = FALSE)
public_op <- public_op[,1:3]
public_op$date <- as.Date(as.yearmon(public_op$date, "%Y-%m"))
public_op[,2:3] <- sapply(public_op[,2:3], function(x) { as.numeric(x)})
public_op <- subset(public_op, select = c(2:3, 1))
# graph it
base_opinion = ggplot(public_op, aes(x = as.Date(date, origin = "1970-01-01"), y = santos_positive_image, color = "Positive image of Pres. Santos")) +
geom_smooth(method = "loess", se = FALSE) +
geom_jitter() +
geom_point(data = public_op, aes(x = as.Date(date, origin = "1970-01-01"), y = approve_santos_decision_talks, color = "Approve of negotiations with guerrillas")) +
geom_smooth(method = "loess", se = FALSE, data = public_op, aes(x = as.Date(date, origin = "1970-01-01"), y = approve_santos_decision_talks, color = "Approve of negotiations with guerrillas")) +
labs(
x = "Date",
y = "Percent Approve/Positive Image",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-01-01", "%Y-%m-%d"), NA)) +
ggtitle("Public Opinion")
# public opinion and ceasefires
opinion_cf = base_opinion +
ggtitle("Public Opinion and Ceasefires") +
geom_rect(aes(xmin=cf_start[1], xmax=cf_end[1], ymin=-Inf, ymax=Inf), fill = "yellow", linetype = 0, alpha = 0.01) +
geom_rect(aes(xmin=cf_start[2], xmax=cf_end[2], ymin=-Inf, ymax=Inf), fill = "yellow", linetype = 0, alpha = 0.01) +
geom_rect(aes(xmin=cf_start[3], xmax=cf_end[3], ymin=-Inf, ymax=Inf), fill = "yellow", linetype = 0, alpha = 0.01) +
geom_rect(aes(xmin=cf_start[4], xmax=cf_end[4], ymin=-Inf, ymax=Inf), fill = "yellow", linetype = 0, alpha = 0.01) +
geom_rect(aes(xmin=cf_start[5], xmax=cf_end[5], ymin=-Inf, ymax=Inf), fill = "yellow", linetype = 0, alpha = 0.01)
# public opinion and major events
opinion_major = base_opinion +
ggtitle("Major Events and Public Opinion Trends") +
geom_vline(data = filter(dates, group == "major_agree"), mapping = aes(xintercept = as.numeric(date), color = "Major agreement"), linetype = 2) +
geom_vline(data = filter(dates, group == "major_viol"), mapping = aes(xintercept = as.numeric(date), color = "Major violence"), linetype = 1)
# get breakdates in public opinion
opinion_breakd <- get_breakdate(break_finder(na.omit(public_op)), public_op)
#################################################################################
#################################################################################
# Function takes 1 parameter: a dataframe, and returns one parameter with monthly stats for violence and public opinion added: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
#################################################################################
#################################################################################
# Markov models
# Hidden Markov model: FARC
# let's limit it to just 2 sentiment measures
FARC_results1 <- FARC_results[, -(3:4)]
# number of states
num_states <- seq(1, 6, by = 1)
#################################################################################
#################################################################################
# What is the optimal number of states? We will optimize for
# (1) BIC, fitted model
# (2) AIC, fitted model
# (3) BIC, fitted model w/ covars
# (4) AIC, fitted model w/ covars
#################################################################################
# formulas for the model
forms1 <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1)
# Optimize BIC vals for fitted model, no covars
BIC_vals1 <- sapply(num_states, function(x) {BIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
BIC_df1 <- data.frame(cbind(num_states, BIC_vals1))
# plot the BIC values to select the optimal number of states
BIC_plot1 <- ggplot(BIC_df1, aes(x = num_states, y = BIC_vals1)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM")
BIC_plot1
# Optimize AIC vals for same fitted model
AIC_vals1 <- sapply(num_states, function(x) {AIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
AIC_df1 <- data.frame(cbind(num_states, AIC_vals1))
# plot the AIC values to select the optimal number of states
AIC_plot1 <- ggplot(AIC_df1, aes(x = num_states, y = AIC_vals1)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM")
AIC_plot1
#################################################################################
#################################################################################
# now optimize for the government
govt_results1 <- govt_results[, -(3:4)]
forms1_govt <- list(govt_results1$EmoNeg ~ 1, govt_results1$EmoPos ~ 1)
BIC_vals1_govt <- sapply(num_states, function(x) {BIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
AIC_vals1_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
govt_results1 <- govt_results[, -(3:4)]
forms1_govt <- list(govt_results1$EmoNeg ~ 1, govt_results1$EmoPos ~ 1)
govt_results1 <- govt_results[, -(3:4)]
forms1_govt <- list(govt_results1$EmoNeg ~ 1, govt_results1$EmoPos ~ 1)
BIC_vals1_govt <- sapply(num_states, function(x) {BIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
AIC_vals1_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
# Run function to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results2 <- add_monthlies(govt_results)
# take the log of the monthly stats
FARC_results2[, 4:7] <- log(FARC_results2[, 4:7])
govt_results2[, 4:7] <- log(govt_results2[, 4:7])
View(FARC_results2)
FARC_results2[, 4:7] <- log(FARC_results2[, 4:7])
govt_results2[, 4:7] <- log(govt_results2[, 4:7])
View(govt_results2)
govt_results1 <- govt_results[, -(3:4)]
govt_results2 <- add_monthlies(govt_results1)
govt_results2[, 6:9] <- log(govt_results2[, 4:7])
BIC_vals_fitted <- sapply(num_states, function(x) {BIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = FARC_results2)))})
AIC_vals_fitted <- sapply(num_states, function(x) {AIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = FARC_results2)))})
BIC_vals_fitted_govt <- sapply(num_states, function(x) {BIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = govt_results2)))})
AIC_vals_fitted_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = govt_results2)))})
AIC_vals_fitted_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = govt_results2)))})
hmm_comparison <- data.frame(BIC_vals1, AIC_vals1, BIC_vals_fitted, AIC_vals_fitted, BIC_vals1_govt, AIC_vals1_govt, BIC_vals_fitted_govt, AIC_vals_fitted_govt)
colnames(hmm_comparison) <- c("BIC", "AIC", "BIC", "AIC", "BIC", "AIC", "BIC", "AIC")
stargazer(hmm_comparison, title="Comparison of Hidden Markov Models", column.labels=c("BIC", "AIC", "BIC", "AIC", "BIC", "AIC", "BIC", "AIC"), summary = FALSE, digits = 2, digit.separator = "")
FARC_results1 <- FARC_results[, -(3:4)]
num_states <- seq(1, 6, by = 1)
forms1 <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1)
BIC_vals1 <- sapply(num_states, function(x) {BIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
BIC_df1 <- data.frame(cbind(num_states, BIC_vals1))
BIC_plot1 <- ggplot(BIC_df1, aes(x = num_states, y = BIC_vals1)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM")
BIC_plot1
AIC_vals1 <- sapply(num_states, function(x) {AIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
AIC_df1 <- data.frame(cbind(num_states, AIC_vals1))
# plot the AIC values to select the optimal number of states
AIC_plot1 <- ggplot(AIC_df1, aes(x = num_states, y = AIC_vals1)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM")
AIC_plot1
govt_results1 <- govt_results[, -(3:4)]
forms1_govt <- list(govt_results1$EmoNeg ~ 1, govt_results1$EmoPos ~ 1)
BIC_vals1_govt <- sapply(num_states, function(x) {BIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
AIC_vals1_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
AIC_vals1_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
govt_results1 <- govt_results[, -(3:4)]
forms1_govt <- list(govt_results1$EmoNeg ~ 1, govt_results1$EmoPos ~ 1)
AIC_vals1_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, data = govt_results1)))})
# Run function to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results2 <- add_monthlies(govt_results1)
# take the log of the monthly stats
FARC_results2[, 4:7] <- log(FARC_results2[, 4:7])
govt_results2[, 6:9] <- log(govt_results2[, 4:7])
BIC_vals_fitted <- sapply(num_states, function(x) {BIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = FARC_results2)))})
AIC_vals_fitted <- sapply(num_states, function(x) {AIC(fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = FARC_results2)))})
BIC_vals_fitted_govt <- sapply(num_states, function(x) {BIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = govt_results2)))})
AIC_vals_fitted_govt <- sapply(num_states, function(x) {AIC(fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = x, transitions = list(~ FARC_actions, ~ pres_approve), data = govt_results2)))})
hmm_comparison <- data.frame(BIC_vals1, AIC_vals1, BIC_vals_fitted, AIC_vals_fitted, BIC_vals1_govt, AIC_vals1_govt, BIC_vals_fitted_govt, AIC_vals_fitted_govt)
colnames(hmm_comparison) <- c("BIC", "AIC", "BIC", "AIC", "BIC", "AIC", "BIC", "AIC")
stargazer(hmm_comparison, title="Comparison of Hidden Markov Models", column.labels=c("BIC", "AIC", "BIC", "AIC", "BIC", "AIC", "BIC", "AIC"), summary = FALSE, digits = 2, digit.separator = "")
#################################################################################
#################################################################################
# HMM wih 3 states
# for FARC: model w/o covars
hmm_F <- fit(depmix(forms1, family = list(gaussian(), gaussian()), nstates = 3, data = FARC_results1))
summary(hmm_F)
# what is the probability of being in a given state over time?
prob_HMM_F <- posterior(hmm_F)
# check that the rows sum to 1
rowSums(head(prob_HMM_F)[,2:4])
# plot probability of being in a state over time against the sentiment measures
colnames(prob_HMM_F) <- c("est_state", paste("P",1:3, sep="_state"))
prob_HMM_F <- cbind(FARC_results1, prob_HMM_F)
# label the states with substantive labels based on mean sentiment
mean_of_states <- function(df) {
n1 <- mean(filter(df, est_state == 1)$EmoNeg)
p1 <- mean(filter(df, est_state == 1)$EmoPos)
n2 <- mean(filter(df, est_state == 2)$EmoNeg)
p2 <- mean(filter(df, est_state == 2)$EmoPos)
n3 <- mean(filter(df, est_state == 3)$EmoNeg)
p3 <- mean(filter(df, est_state == 3)$EmoPos)
sdn1 <- sd(filter(df, est_state == 1)$EmoNeg)
sdp1 <- sd(filter(df, est_state == 1)$EmoPos)
sdn2 <- sd(filter(df, est_state == 2)$EmoNeg)
sdp2 <- sd(filter(df, est_state == 2)$EmoPos)
sdn3 <- sd(filter(df, est_state == 3)$EmoNeg)
sdp3 <- sd(filter(df, est_state == 3)$EmoPos)
results1 <- c(n1, sdn1, p1, sdp1)
results2 <- c(n2, sdn2, p2, sdp2)
results3 <- c(n3, sdn3, p3, sdp3)
return(rbind(results1, results2, results3))
}
FARC_hmm_means <- mean_of_states(prob_HMM_F)
# what state are we in at a given time?
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = c(1, 2, 3)) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of FARC")
#################################################################################
## now do the same for the government
hmm_g <- fit(depmix(forms1_govt, family = list(gaussian(), gaussian()), nstates = 3, data = govt_results1))
summary(hmm_g)
# what is the probability of being in a given state over time?
prob_HMM_g <- posterior(hmm_g)
# check that the rows sum to 1
rowSums(head(prob_HMM_g)[,2:4])
# plot probability of being in a state over time against the sentiment measures
colnames(prob_HMM_g) <- c("est_state", paste("P",1:3, sep="_state"))
prob_HMM_g <- cbind(govt_results1, prob_HMM_g)
# get means
govt_hmm_means <- mean_of_states(prob_HMM_g)
# cbind it into a table for stargazer
hmm_all_means <- cbind(FARC_hmm_means, govt_hmm_means)
stargazer(hmm_all_means, summary = FALSE, title = "Mean Sentiment Scores for Latent States", digits = 2)
# what state are we in at a given time?
HMM_g_est_state_gg = ggplot(prob_HMM_g, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = c(1, 2, 3)) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of Government")
HMM_g_est_state_gg
HMM_F_est_state_gg
View(prob_HMM_g)
FARC_hmm_means
govt_hmm_means
mean_of_states <- function(df) {
n1 <- mean(filter(df, est_state == 1)$EmoNeg)
p1 <- mean(filter(df, est_state == 1)$EmoPos)
n2 <- mean(filter(df, est_state == 2)$EmoNeg)
p2 <- mean(filter(df, est_state == 2)$EmoPos)
n3 <- mean(filter(df, est_state == 3)$EmoNeg)
p3 <- mean(filter(df, est_state == 3)$EmoPos)
sdn1 <- sd(filter(df, est_state == 1)$EmoNeg)
sdp1 <- sd(filter(df, est_state == 1)$EmoPos)
sdn2 <- sd(filter(df, est_state == 2)$EmoNeg)
sdp2 <- sd(filter(df, est_state == 2)$EmoPos)
sdn3 <- sd(filter(df, est_state == 3)$EmoNeg)
sdp3 <- sd(filter(df, est_state == 3)$EmoPos)
mdn1 <- median(filter(df, est_state == 1)$EmoNeg)
mdn2 <- median(filter(df, est_state == 2)$EmoNeg)
mdn3 <- median(filter(df, est_state == 3)$EmoNeg)
mdp1 <- median(filter(df, est_state == 1)$EmoPos)
mdp2 <- median(filter(df, est_state == 2)$EmoPos)
mdp3 <- median(filter(df, est_state == 3)$EmoPos)
results1 <- c(n1, sdn1, mdn1, p1, sdp1, mdp1)
results2 <- c(n2, sdn2, mdn2, p2, sdp2, mdp2)
results3 <- c(n3, sdn3, mdn3, p3, sdp3, mdp3)
return(rbind(results1, results2, results3))
}
FARC_hmm_means <- mean_of_states(prob_HMM_F)
FARC_hmm_means
govt_hmm_means <- mean_of_states(prob_HMM_g)
stargazer(hmm_all_means, summary = FALSE, title = "Mean Sentiment Scores for Latent States", digits = 2)
govt_hmm_means
install.packages("clue")
library("clue")
beta1 <- FARC_hmm_means[, c(3, 6)]
beta()
beta1
beta2 <- govt_hmm_means[, c(3, 6)]
align <- clue::solve_LSAP(beta1%*%t(beta2), maximum=TRUE)
align
beta1 <- FARC_hmm_means[, 6]
beta2 <- govt_hmm_means[, 6]
align <- clue::solve_LSAP(beta1%*%t(beta2), maximum=TRUE)
align
beta1 <- FARC_hmm_means[, 3]
beta2 <- govt_hmm_means[, 3]
align <- clue::solve_LSAP(beta1%*%t(beta2), maximum=TRUE)
align
beta1 <- beta1 * -1
align <- clue::solve_LSAP(beta1%*%t(beta2), maximum=TRUE)
beta1 <- FARC_hmm_means[, 3]
beta2 <- govt_hmm_means[, 3]
align <- clue::solve_LSAP(beta1%*%t(beta2), maximum=FALSE)
beta1_p <- FARC_hmm_means[, 6]
beta2_p <- govt_hmm_means[, 6]
align2_p <- clue::solve_LSAP(beta1_p%*%t(beta2_p), maximum=TRUE)
align
align2_p
beta1_p%*%t(beta2_p)
as.matrix(beta1, beta2)
as.matrix(c(beta1, beta2))
as.matrix(c(beta1, beta2), nrows = 3)
as.matrix(c(beta1, beta2), nrow = 3)
as.matrix(cbind(beta1, beta2), nrow = 3)
x <- as.matrix(cbind(beta1, beta2), nrow = 3)
solve_LSAP(x, maximum = TRUE)
x <- as.matrix(Rbind(beta1, beta2))
x <- as.matrix(rbind(beta1, beta2))
solve_LSAP(x, minimum = TRUE)
solve_LSAP(x, maximum = TRUE)
x
y <- log(x)
solve_LSAP(y, maximum = TRUE)
y
mat1 <- FARC_hmm_means[, c(3, 6)]
mat2 <- govt_hmm_means[, c(3, 6)]
mat1
dec_mat <- as.matrix(cbind(mat1, mat2))
dec_mat
colnames(hmm_medians_df) <- ("F_neg", "F_pos", "G_neg", "G_pos")
row.names(hmm_medians_df) <- c("state1", "state2", "state3")
hmm_medians_df <- cbind(FARC_hmm_means[, c(3, 6)], govt_hmm_means[, c(3, 6)])
row.names(hmm_medians_df) <- c("state1", "state2", "state3")
colnames(hmm_medians_df) <- c("F_neg", "F_pos", "G_neg", "G_pos")
dec_mat <- as.matrix(hmm_medians_df)
dec_mat
install.packages("MCDM")
library("MCDM")
MetaRanking(dec_mat, cb = c(min, max, min, max))
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c(min, max, min, max))
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c("min", "max", "min", "max"))
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c("min", "max", "min", "max"), lambda = .5, q = .5)
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c("min", "max", "min", "max"), lambda = .5, v = .5)
hmm_medians_df <- cbind(FARC_hmm_means[, c(1, 4)], govt_hmm_means[, c(1, 4)])
row.names(hmm_medians_df) <- c("state1", "state2", "state3")
colnames(hmm_medians_df) <- c("F_neg", "F_pos", "G_neg", "G_pos")
dec_mat <- as.matrix(hmm_medians_df)
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c("min", "max", "min", "max"), lambda = .5, v = .5)
hmm_medians_df <- cbind(FARC_hmm_means[, c(1, 4)], govt_hmm_means[, c(1, 4)])
row.names(hmm_medians_df) <- c("state1", "state2", "state3")
colnames(hmm_medians_df) <- c("F_neg", "F_pos", "G_neg", "G_pos")
dec_mat <- as.matrix(hmm_medians_df)
MetaRanking(dec_mat, weights = c(.25, .25, .25, .25), cb = c("min", "max", "min", "max"), lambda = .5, v = .5)
View(prob_HMM_F)
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of FARC")
HMM_F_est_state_gg
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
install.packages("car")
library(car)
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
prob_HMM_G$est_state <- recode(prob_HMM_G$est_state, "3=1; 1=3")
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of FARC")
HMM_g_est_state_gg = ggplot(prob_HMM_g, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of Government")
HMM_F_est_state_gg
HMM_g_est_state_gg
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
prob_HMM_g <- cbind(govt_results1, prob_HMM_g)
prob_HMM_F <- cbind(FARC_results1, prob_HMM_F)
# relabel the states on a spectrum of willingness to negotiate
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
prob_HMM_G$est_state <- recode(prob_HMM_G$est_state, "3=1; 1=3")
prob_HMM_g$est_state <- recode(prob_HMM_g$est_state, "3=1; 1=3")
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of FARC")
HMM_g_est_state_gg = ggplot(prob_HMM_g, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of Government")
HMM_F_est_state_gg
HMM_g_est_state_gg
prob_HMM_F$est_state <- recode(prob_HMM_F$est_state, "3=1; 1=3")
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimated Hardline/Moderate/Conciliatory States of FARC")
HMM_F_est_state_gg
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimation of States of Willingness to Negotiate: FARC")
HMM_g_est_state_gg = ggplot(prob_HMM_g, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "State",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimation of States of Willingness to Negotiate: Government")
HMM_F_est_state_gg
HMM_g_est_state_gg
HMM_F_est_state_gg = ggplot(prob_HMM_F, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "Willingness to Negotiate",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimation of States of Willingness to Negotiate: FARC")
HMM_g_est_state_gg = ggplot(prob_HMM_g, aes(x = as.Date(date, origin = "1970-01-01"), y = est_state)) +
geom_step(color = "#000000") +
labs(
x = "",
y = "Willingness to Negotiate",
color = "Legend") +
scale_x_date(date_minor_breaks = "1 month",
limits = c(as.Date("2012-09-01", "%Y-%m-%d"), NA)) +
scale_y_continuous(breaks = 1:3, labels = c("Low", "Moderate", "High")) +
ggtitle("Estimation of States of Willingness to Negotiate: Government")
HMM_g_est_state_gg
HMM_F_est_state_gg
summary(hmm_g)
summary(hmm_F)
