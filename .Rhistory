FARC_means
govt_means
joint_means
viol_means
# Base graphs (all loessed)
base_neg
base_pos
base_ellos
base_death
base_viol
base_opinion
# Graphs with ceasefires and major events
neg_cf
neg_major
pos_cf
pos_major
ellos_major
death_major
viol_major
viol_cf
opinion_cf
opinion_major
# Graphs with structural breaks
neg_breaks_gg
pos_breaks_gg
ellos_breaks_gg
death_breaks_gg
viol_breaks_gg
#################################################################################
#################################################################################
# # possible states: hardline or concessions
# hmm_states <- c("hardline", "concessions")
# # possible symbols: technically any value between 0.0000 and 100.0000
# hmm_symbols <- seq(0, 100, by = 0.0001)
# neg_hmm <- initHMM(hmm_states, hmm_symbols)
# Run hidden Markov model
# let's limit it to just 3 sentiment measures
FARC_results1 <- FARC_results[, -4]
# formulas
forms <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
# Find the optimal number of states using BIC
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
# now add the covariates: monthly violence
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results1 <- add_monthlies(FARC_results)
govt_results1 <- add_monthlies(govt_results)
# run the model for states n = 2
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results1)
hmm_mod <- fit(mod)
summary(hmm_mod)
# what state are we in at a given time t?
head(posterior(hmm_mod)) # graph this later
#### using msm()
# per the documentation, I need nonzero values for the initial transition probabilities in the qmatrix() option. Use arbitrary value of 0.5
qmat <- rbind(c(0.5,0.5), c(0.5,0.5))
# specify arbitrary hmodel also
hmodel1 <- list(hmmNorm(mean = 10, sd = 3), hmmNorm(mean = 10, sd = 3))
# and we need the data to be sorted by time
FARC_results1 <- FARC_results[order(FARC_results$date),]
# run msm()
FARC_msm <- msm(EmoNeg ~ date, data = FARC_results1[,-4], qmatrix = qmat, hmodel = hmodel1, hcovariates = list(~ EmoPos, ~ Ellos))
FARC_msm
sojourn.msm(FARC_msm)
View(FARC_results1)
View(FARC_results1)
FARC_results1 <- add_monthlies(FARC_results1)
View(FARC_results1)
View(FARC_results1)
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions))
hmm_mod <- fit(mod)
hmm_mod
summary(hmm_mod)
View(FARC_results1)
View(FARC_results1)
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties))
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
BIC_vals2 <- sapply(num_states, function(x) {BIC(mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_vals2 <- sapply(num_states, function(x) {depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals))
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot2
BIC_df
BIC_df2
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot2
BIC_vals2 <- sapply(num_states, function(x) {depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_df2
BIC_vals2 <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve)))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_df2
BIC_df
BIC_vals2 <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve)))})
BIC_vals2
FARC_results1 <- FARC_results[, -4]
# formulas
forms <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
# Find the optimal number of states using BIC
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
# now add the covariates: monthly violence
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results1 <- add_monthlies(govt_results)
# get the BIC again with covariates
BIC_vals2 <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve)))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot2
BIC_vals2
FARC_results1 <- FARC_results[, -4]
# formulas
forms <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
# Find the optimal number of states using BIC
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
BIC_vals2 <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve)))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM w/ Covariates")
BIC_plot2
BIC_vals2 <- sapply(num_states, function(x) {BIC(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2, transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve)))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM w/ Covariates")
BIC_plot2
BIC_df2
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results1[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
mod
hmm_mod <- fit(mod)
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results2, transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
mod <- depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = 2, data = FARC_results2, transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
summary(mod)
hmm_mod
BIC(hmm_mod)
BIC(mod)
BIC_vals <- sapply(num_states, function(x) {BICfit(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
BIC_vals <- sapply(num_states, function(x) {BIC(fit(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1)))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot
BIC_vals <- sapply(num_states, function(x) {BIC(fit(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
BIC_plot2
AIC(hmm_mod)
AIC_vals <- sapply(num_states, function(x) {AIC(fit(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
AIC_df <- data.frame(cbind(num_states, AIC_vals))
# plot the BIC values to select the optimal number of states
AIC_plot <- ggplot(AIC_df, aes(x = num_states, y = AIC_vals)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
AIC_plot
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results1 <- add_monthlies(FARC_results1)
BIC_vals2 <- sapply(num_states, function(x) {BIC(fit(depmix(forms, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
BIC_plot2
BIC_plot2
FARC_results1 <- FARC_results[, -4]
# formulas
forms1 <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
# Find the optimal number of states using BIC -- before fitting
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms1, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
# add the covariates: monthly violence
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results1 <- add_monthlies(govt_results)
forms2 <- list(FARC_results2$EmoNeg ~ 1, FARC_results2$EmoPos ~ 1, FARC_results2$Ellos ~ 1)
# what are BIC values of the fitted models?
BIC_vals2 <- sapply(num_states, function(x) {BIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# what are AIC values of the fitted models?
AIC_vals <- sapply(num_states, function(x) {AIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
AIC_df <- data.frame(cbind(num_states, AIC_vals))
# plot the BIC values to select the optimal number of states
AIC_plot <- ggplot(AIC_df, aes(x = num_states, y = AIC_vals)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# run the model for states n = 3
mod <- depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = 3, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
# what state are we in at a given time t?
head(posterior(hmm_mod)) # graph this later
BIC_plot
BIC_plot2
AIC_plot
BIC_vals2
BIC_vals
BIC_df2
BIC_plot2
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals2)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
BIC_plot2
tail(FARC_results2)
FARC_results1 <- filter(FARC_results, date >= "2012-01-01")
FARC_results1
forms1 <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms1, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
# add the covariates: monthly violence
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results1 <- add_monthlies(govt_results)
forms2 <- list(FARC_results2$EmoNeg ~ 1, FARC_results2$EmoPos ~ 1, FARC_results2$Ellos ~ 1)
# what are BIC values of the fitted models?
BIC_vals2 <- sapply(num_states, function(x) {BIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals2)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# what are AIC values of the fitted models?
AIC_vals <- sapply(num_states, function(x) {AIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
AIC_df <- data.frame(cbind(num_states, AIC_vals))
# plot the BIC values to select the optimal number of states
AIC_plot <- ggplot(AIC_df, aes(x = num_states, y = AIC_vals)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# run the model for states n = 3
mod <- depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = 3, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
# what state are we in at a given time t?
head(posterior(hmm_mod)) # graph this later
BIC_plot
BIC_plot2
AIC_plot
FARC_results1 <- FARC_results[, -4]
FARC_results1 <- filter(FARC_results1, date >= "2012-01-01")
# formulas
forms1 <- list(FARC_results1$EmoNeg ~ 1, FARC_results1$EmoPos ~ 1, FARC_results1$Ellos ~ 1)
# Find the optimal number of states using BIC -- before fitting
num_states <- seq(2, 10, by = 1)
BIC_vals <- sapply(num_states, function(x) {BIC(depmix(forms1, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results1))})
BIC_df <- data.frame(cbind(num_states, BIC_vals))
# plot the BIC values to select the optimal number of states
BIC_plot <- ggplot(BIC_df, aes(x = num_states, y = BIC_vals)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States HMM")
# add the covariates: monthly violence
# Function takes 1 parameter: a dataframe, and returns one parameter: a dataframe
add_monthlies <- function(df) {
dates <- df["date"]
# add columns for the monthly data we're adding
col_names <- c("FARC_actions", "army_casualties", "pres_approve", "peace_approve")
df[, col_names] <- NA
for (i in 1:length(dates[[1]])) {
date <- dates[i, 1]
year <- format(date, "%Y")
month <- format(date, "%m")
monthly_date <- as.Date(paste(year, month, "01", sep = "-"))
# get the stats from violence and opinion dfs
viol <- filter(monthly_viol, date == monthly_date)
public <- filter(public_op, date == monthly_date)
# write them to new df
df["FARC_actions"][i, 1] <- as.numeric(viol[1])
df["army_casualties"][i, 1] <- as.numeric(viol[2])
df["pres_approve"][i, 1] <- as.numeric(public[1])
df["peace_approve"][i, 1] <- as.numeric(public[2])
}
return(df)
}
# run to add violence/public opinion levels to FARC df
FARC_results2 <- add_monthlies(FARC_results1)
govt_results1 <- add_monthlies(govt_results)
forms2 <- list(FARC_results2$EmoNeg ~ 1, FARC_results2$EmoPos ~ 1, FARC_results2$Ellos ~ 1)
# what are BIC values of the fitted models?
BIC_vals2 <- sapply(num_states, function(x) {BIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
BIC_df2 <- data.frame(cbind(num_states, BIC_vals2))
# plot the BIC values to select the optimal number of states
BIC_plot2 <- ggplot(BIC_df2, aes(x = num_states, y = BIC_vals2)) +
geom_point() +
ggtitle("BIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# what are AIC values of the fitted models?
AIC_vals <- sapply(num_states, function(x) {AIC(fit(depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = x, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))))})
AIC_df <- data.frame(cbind(num_states, AIC_vals))
# plot the BIC values to select the optimal number of states
AIC_plot <- ggplot(AIC_df, aes(x = num_states, y = AIC_vals)) +
geom_point() +
ggtitle("AIC Values for n = 2:10 Latent States Fitted HMM w/ Covariates")
# run the model for states n = 3
mod <- depmix(forms2, family = list(gaussian(), gaussian(), gaussian()), nstates = 3, data = FARC_results2[,-(6:9)], transitions = list(~ FARC_actions, ~ army_casualties, ~ pres_approve, ~ peace_approve))
hmm_mod <- fit(mod)
summary(hmm_mod)
# what state are we in at a given time t?
head(posterior(hmm_mod)) # graph this later
#### using msm()
# per the documentation, I need nonzero values for the initial transition probabilities in the qmatrix() option. Use arbitrary value of 0.5
qmat <- rbind(c(0.5,0.5), c(0.5,0.5))
# specify arbitrary hmodel also
hmodel1 <- list(hmmNorm(mean = 10, sd = 3), hmmNorm(mean = 10, sd = 3))
# and we need the data to be sorted by time
FARC_results1 <- FARC_results[order(FARC_results$date),]
# run msm()
FARC_msm <- msm(EmoNeg ~ date, data = FARC_results1[,-4], qmatrix = qmat, hmodel = hmodel1, hcovariates = list(~ EmoPos, ~ Ellos))
FARC_msm
sojourn.msm(FARC_msm)
BIC_plot
BIC_plot2
AIC_plot
AIC_vals
